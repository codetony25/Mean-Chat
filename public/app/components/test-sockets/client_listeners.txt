Client Listeners
=-=-=-=-=-=-=-=-=


'room/auth/success'
	Server authorizes user to join a room

	_room:			Room ID to join


'room/:id/user/joined'
	Notification that a user has joined the room

	_user:			User ID
	username:		Username


'room/:id/user/exited'
	Notification that a user has exited the room

	_user:			User ID
	username:		Username



'room_<<room id>>'
Example: mySocket.on('room_56029324kdslasdasd', function ...)
Listens for new messages to the specific room id
	Receives a message object

'room_update_<<room id>>'
Listens for any changes to a specific room
	Receives a room object

'docked_<<room id>>'
Doesn't receive any data, just listens if there's activity in any of the docked rooms to update the ephemeral count

'user_update'
Listens for any changes made to the currently logged in user
	Receives a user object without password

'joined_room'
The server will emit a room here to just this user when he has successfully joined a room.
	Receives the room object the user joined

'left_room'
The server will emit a room here to just this user when he has successfully left a room.
	Receives the room object the user left

'new_room'
The server emits to this listener for all users whe a new room has been created.
	Receives the new room object

'user_profile'
The server emits here when a user requests another users profile
	Receives the user object with only fields needed to display a profile